version: "3.6"
services:
  caddy:
    container_name: caddy
    image: caddy:2
    ports:
      - "8180:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy:/data
    environment:
      DOMAIN: "${DOMAIN}"
  ui:
    depends_on:
      - lapp
    container_name: ui
    image: asoltys/raretoshi:staging
    restart: on-failure
    ports:
      - "3000:3000"
      - "9229:9229"
  lapp:
    depends_on:
      - hbp
    container_name: lapp
    image: asoltys/raretoshi-server:staging
    restart: on-failure
    environment:
      APP_URL: "${APP_URL}"
      CLOUDFLARE_TOKEN: "${CLOUDFLARE_TOKEN}"
      CLOUDFLARE_ZONE: "${CLOUDFLARE_ZONE}"
      COINOS_TOKEN: "${COINOS_TOKEN}"
      COINOS_URL: "${COINOS_URL}"
      DOMAIN: "${DOMAIN}"
      HASURA_JWT: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_URL: "${HASURA_URL}"
      HBP_URL: "${HBP_URL}"
      IPFS_URL: "${IPFS_URL}"
      IPFS_WEB_URL: "${IPFS_WEB_URL}"
      LIQUID_ELECTRS_URL: "${LIQUID_ELECTRS_URL}"
      NFT_STORAGE_TOKEN: "${NFT_STORAGE_TOKEN}"
      NODE_ENV: "production"
      SERVER_URL: "${SERVER_URL}"
      SIGNING_SERVER_MNEMONIC: "${SIGNING_SERVER_MNEMONIC}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_SENDER: "${SMTP_SENDER}"
      SMTP_USER: "${SMTP_USER}"
      RPCHOST: "${RPCHOST}"
      RPCPORT: "${RPCPORT}"
      RPCUSER: "${RPCUSER}"
      RPCPASS: "${RPCPASS}"
      RPCWALLET: "${RPCWALLET}"
    volumes:
      - ./custom:/opt/src/hasura/app/custom
      - ${STORAGE_DIR}:/export
    ports:
      - "8091:8091"
  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  hasura:
    container_name: hasura
    image: hasura/graphql-engine:v2.7.0
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
      - ./seeds:/hasura-seeds
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_USER}"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
  hbp:
    container_name: hbp
    image: nhost/hasura-backend-plus:v2.4.0
    depends_on:
      - hasura
    ports:
      - "3400:3000"
    environment:
      SERVER_URL: "${SERVER_URL}"
      HASURA_ENDPOINT: "${HASURA_URL}/v1/graphql"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      JWT_ALGORITHM: "${JWT_ALGORITHM}"
      JWT_KEY: "${JWT_KEY}"
      AUTO_MIGRATE: "true"
      STORAGE_ENABLE: "false"
      MAX_REQUESTS: 10000
      LOST_PASSWORD_ENABLE: "true"
      EMAILS_ENABLE: "true"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USER: "${SMTP_USER}"
      SMTP_PASS: "${SMTP_PASS}"
      SMTP_SENDER: "${SMTP_SENDER}"
      AUTO_ACTIVATE_NEW_USERS: "false"
      VERIFY_EMAILS: "true"
    volumes:
      - ./custom:/app/custom
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs:v0.14.0
    ports:
      - 8081:8080
      - 4001:4001
      - 5001:5001
    volumes:
      - ${IPFS_DATA}:/data/ipfs
      - ${STORAGE_DIR}:/export
  redis:
    container_name: redis
    image: redis
    volumes:
      - ./redis:/data
  liquid:
    image: ghcr.io/vulpemventures/elements:0.21.0.2
    container_name: liquid
    volumes:
      - ./liquidmainnet:/home/elements/.elements
    restart: unless-stopped

